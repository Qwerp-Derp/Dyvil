package dyvil

// Collection Operators
infix	operator ?		{ associativity none,	precedence 1200 }
infix	operator ++		{ associativity left,	precedence 1200 }
infix	operator --		{ associativity left,	precedence 1200 }
infix	operator ::		{ associativity right,	precedence 1200 }

// Map Operators
infix	operator ?@		{ associativity none,	precedence 1200 }
infix	operator ?:		{ associativity none,	precedence 1200 }
infix	operator -@		{ associativity none,	precedence 1200 }
infix	operator -:		{ associativity none,	precedence 1200 }

// Import all classes from the dyvil.collection package
import	dyvil.collection._

// Use Collection Operators
using	dyvil.collection.{
	CollectionOperators._
	ListOperators._
	SetOperators._
	MapOperators._
}

// Collection Type Aliases
type	Array<E>			= [E]
type	MutableArray<E>		= [var E]
type	ImmutableArray<E>	= [final E]

type	List<E>				= [E...]
type	MutableList<E>		= [var E...]
type	ImmutableList<E>	= [final E...]

type	Map<K, V>			= [K:V]
type	MutableMap<K, V>	= [var K : V]
type	ImmutableMap<K, V>	= [final K : V]

// Lists
import	dyvil.collection.immutable.ArrayList		=> ImmutableArrayList

import	dyvil.collection.mutable.ArrayList			=> MutableArrayList
import	dyvil.collection.mutable.LinkedList			=> MutableLinkedList

// Sets
import	dyvil.collection.immutable.ArraySet			=> ImmutableArraySet
import	dyvil.collection.immutable.MapBasedSet		=> ImmutableMapBasedSet
import	dyvil.collection.immutable.HashSet			=> ImmutableHashSet
import	dyvil.collection.immutable.IdentityHashSet	=> ImmutableIdentityHashSet

import	dyvil.collection.mutable.ArraySet			=> MutableArraySet
import	dyvil.collection.mutable.MapBasedSet		=> MutableMapBasedSet
import	dyvil.collection.mutable.HashSet			=> MutableHashSet
import	dyvil.collection.mutable.IdentityHashSet	=> MutableIdentityHashSet
import	dyvil.collection.mutable.BitSet				=> MutableBitSet

// Maps
import	dyvil.collection.immutable.ArrayMap			=> ImmutableArrayMap
import	dyvil.collection.immutable.TupleMap			=> ImmutableTupleMap
import	dyvil.collection.immutable.HashMap			=> ImmutableHashMap
import	dyvil.collection.immutable.IdentityHashMap	=> ImmutableIdentityHashMap
import	dyvil.collection.immutable.EnumMap			=> ImmutableEnumMap
import	dyvil.collection.immutable.TreeMap			=> ImmutableTreeMap

import	dyvil.collection.mutable.ArrayMap			=> MutableArrayMap
import	dyvil.collection.mutable.TupleMap			=> MutableTupleMap
import	dyvil.collection.mutable.HashMap			=> MutableHashMap
import	dyvil.collection.mutable.IdentityHashMap	=> MutableIdentityHashMap
import	dyvil.collection.mutable.EnumMap			=> MutableEnumMap
import	dyvil.collection.mutable.TreeMap			=> MutableTreeMap

// Matrices
import	dyvil.collection.immutable.ArrayMatrix		=> ImmutableArrayMatrix
import	dyvil.collection.immutable.FlatArrayMatrix	=> ImmutableFlatArrayMatrix

import	dyvil.collection.mutable.FlatArrayMatrix	=> ImmutableFlatArrayMatrix
