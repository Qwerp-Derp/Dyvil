package dyvil.function

@FunctionalInterface
public interface Function2<-P1, -P2, +R>
{
	func apply(P1 par1, P2 par2): R
	
	postfix func curried<A, B, C>((A, B) -> C function): A -> B -> C = p1 => p2 => function(p1, p2)
	
	postfix func tupled<A, B, C>((A, B) -> C function): ((A, B)) -> C = tuple => function(tuple._1, tuple._2)
}
