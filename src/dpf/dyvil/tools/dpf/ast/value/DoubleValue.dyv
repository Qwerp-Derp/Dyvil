package dyvil.tools.dpf.ast.value;

import dyvil.tools.dpf.visitor.ValueVisitor;

public case class DoubleValue(protected double value) implements Constant
{
	public double getValue()
	{
		return this.value;
	}
	
	public void setValue(double value)
	{
		this.value = value;
	}
	
	public override void accept(ValueVisitor visitor)
	{
		visitor.visitDouble(this.value);
	}

	public override Object toObject() = this.value

	public override void appendString(StringBuilder builder)
	{
		builder.append(this.value)
	}

	public override String toString() = this.value + "D"

	public override void toString(String indent, StringBuilder buffer)
	{
		buffer.append(this.value).append('D')
	}
}
