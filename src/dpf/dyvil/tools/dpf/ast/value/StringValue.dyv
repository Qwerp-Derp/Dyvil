package dyvil.tools.dpf.ast.value;

import dyvil.tools.dpf.visitor.ValueVisitor;
import dyvil.tools.parsing.ast.IASTNode;
import dyvil.tools.parsing.lexer.LexerUtil;

public case class StringValue(protected String value) implements Constant
{
	public override void accept(ValueVisitor visitor) = visitor.visitString(this.value)

	public override Object toObject() = this.value

	public override void appendString(StringBuilder builder) = builder.append(this.value)

	public override String toString() = IASTNode.toString(this)
	
	public override void toString(String indent, StringBuilder buffer) = LexerUtil.appendStringLiteral(this.value, buffer)
}
