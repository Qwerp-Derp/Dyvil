package dyvil.tools.dpf.ast

import dyvil.collection.Map
import dyvil.tools.{ dpf.visitor.NodeVisitor, parsing.Name }

public class RootNode extends Node
{
	public init()
	{
		super.init(Name.getQualified("root"))
	}
	
	public override void accept(NodeVisitor visitor) = this.acceptBody(visitor)

	public override RootNode expand(Map<String, Object> mappings, boolean mutate)
	{
		if (mutate)
		{
			this.expandChildren(mappings)
			return this
		}
		else
		{
			RootNode node = new RootNode()
			this.expand(node, mappings)
			return node
		}
	}

	public override void toString(String indent, StringBuilder buffer) = this.bodyToString(indent, buffer)
}
