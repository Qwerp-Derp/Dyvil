package dyvil.test

public class BridgeTest
{
	public interface Container<T>
	{
		T get()
		
		void set(T value)
	}
	
	public case class IntContainer(int value) implements Container<int>
	{
		public override int get() = this.value
		
		public override void set(int value)
		{
			this.value = value
		}
	}
	
	public case class LongContainer(long value) implements Container<long>
	{
		public override long get() = this.value
				
		public override void set(long value)
		{
			this.value = value
		}
	}
	
	public static void main([String] args)
	{
		var ic = IntContainer(1)
		Main.test("IntContainer", 1, ic.get)

		Container<int> intContainer = ic
		ic.set(3)
		Main.test("Container[int]", 3, intContainer.get)
		
		var lc = LongContainer(2L)
		Main.test("LongContainer", 2L, lc.get)

		Container<long> longContainer = lc
		lc.set(4L)
		Main.test("Container[long]", 4L, longContainer.get)
	}
}
